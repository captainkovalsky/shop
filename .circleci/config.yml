# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  testBackend:
    docker:
      - image: circleci/golang:latest
    working_directory: /go/src/github.comcaptainkovalsky/shop
    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run: go test -v ./...

  buildBackend:
    docker:
      - image: circleci/golang:latest
    working_directory: /go/src/github.comcaptainkovalsky/shop
    steps:
      - checkout
      - run: go get -v -d ./...
      - run: bash scripts/build.bash
      - run:
          name: Compress Artifacts
          command: tar -cvzf back.tar -C dist .
      - store_artifacts:
          path: back.tar
      - persist_to_workspace:
          root: .
          paths:
            - back.tar

  buildFE:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - v1-repo-{{ checksum "frontend/package-lock.json" }}
      - run: bash scripts/frontend.bash frontend
      - save_cache: # special step to save the dependency cache
          key: v1-repo-{{ checksum "frontend/package-lock.json" }}
          paths:
            - "frontend/node_modules"
      - run:
          name: Compress artifacts
          command: tar -cvzf front.tar -C frontend/dist/frontend .
      - store_artifacts:
          path: front.tar
      - persist_to_workspace:
          root: .
          paths:
            - front.tar

  deploy:
    machine:
      enabled: true
    steps:
      - attach_workspace:
          at: workspace
      - add_ssh_keys:
          fingerprints:
            - "3a:49:3d:97:5f:6b:54:79:0c:32:0b:5c:28:b5:b2:a3"
      - run:
          name: "Deploy to Digital Ocean"
          command: |
            ls -lh workspace

            ssh $SSH_USER@$SSH_HOST ./ci/deploy.bash $CIRCLECI_TOKEN
workflows:
  version: 2
  build:
    jobs:
      - buildFE
      - testBackend
      - buildBackend:
          requires:
            - testBackend
      - deploy:
          requires:
            - buildBackend
            - buildFE
          filters:
            branches:
              only: master
